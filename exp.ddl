-- Generated by Oracle SQL Developer Data Modeler 17.3.0.261.1529
--   at:        2018-01-13 03:24:46 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



CREATE TABLE badanie_skl_z (
    id       INTEGER NOT NULL,
    id1      INTEGER NOT NULL,
    id_t_b   INTEGER NOT NULL
);

ALTER TABLE badanie_skl_z
    ADD CONSTRAINT badanie_skl_z_pk PRIMARY KEY ( id,
    id1,
    id_t_b );

CREATE TABLE cennik (
    cost     NUMBER NOT NULL,
    "FROM"   DATE NOT NULL,
    "To"     DATE,
    id       INTEGER NOT NULL
);

ALTER TABLE cennik ADD CONSTRAINT cennik_pk PRIMARY KEY ( id,
"FROM" );

CREATE TABLE konsultacja (
    id       INTEGER NOT NULL,
    "DATE"   DATE NOT NULL,
    id1      INTEGER NOT NULL,
    id2      INTEGER NOT NULL
);

ALTER TABLE konsultacja
    ADD CONSTRAINT konsultacja_pk PRIMARY KEY ( id,
    id1,
    id2 );

CREATE TABLE lek_opiekuje_sie_pac (
    id           INTEGER NOT NULL,
    start_date   DATE NOT NULL,
    end_date     DATE,
    id1          INTEGER NOT NULL,
    id2          INTEGER NOT NULL
);

ALTER TABLE lek_opiekuje_sie_pac
    ADD CONSTRAINT lek_opiekuje_siê_pac_pk PRIMARY KEY ( id,
    id1,
    id2 );

CREATE TABLE lekarz (
    id   INTEGER NOT NULL
);

ALTER TABLE lekarz ADD CONSTRAINT lekarz_pk PRIMARY KEY ( id );

CREATE TABLE oddzial (
    id            INTEGER NOT NULL,
    nazwa         VARCHAR2(50 CHAR) NOT NULL,
    ilosc_lozek   INTEGER NOT NULL,
    id1           INTEGER NOT NULL
);

CREATE UNIQUE INDEX oddzial__idx ON
    oddzial ( id1 ASC );

ALTER TABLE oddzial ADD CONSTRAINT oddzial_pk PRIMARY KEY ( id );

CREATE TABLE pacjent (
    id        INTEGER NOT NULL,
    pesel     INTEGER NOT NULL,
    name      VARCHAR2(50 CHAR) NOT NULL,
    surname   VARCHAR2(50 CHAR) NOT NULL
);

ALTER TABLE pacjent ADD CONSTRAINT pacjent_pk PRIMARY KEY ( id );

CREATE TABLE pielegniarz (
    id   INTEGER NOT NULL
);

ALTER TABLE pielegniarz ADD CONSTRAINT pielegniarz_pk PRIMARY KEY ( id );

CREATE TABLE pracownik (
    id               INTEGER NOT NULL,
    pesel            INTEGER NOT NULL,
    name             VARCHAR2(50 CHAR) NOT NULL,
    surname          VARCHAR2(50 CHAR) NOT NULL,
    salary           NUMBER NOT NULL,
    id1              INTEGER,
    pracownik_type   VARCHAR2(23) NOT NULL
);

ALTER TABLE pracownik
    ADD CONSTRAINT ch_inh_pracownik CHECK ( pracownik_type IN (
        'LEKARZ',
        'PIELEGNIARZ',
        'PRACOWNIK_ADMINISTRACJI'
    ) );

ALTER TABLE pracownik ADD CONSTRAINT pracownik_pk PRIMARY KEY ( id );

CREATE TABLE pracownik_administracji (
    id   INTEGER NOT NULL
);

ALTER TABLE pracownik_administracji ADD CONSTRAINT pracownik_administracji_pk PRIMARY KEY ( id );

CREATE TABLE pracuje_w (
    start_date   DATE NOT NULL,
    end_date     DATE,
    id           INTEGER NOT NULL,
    id1          INTEGER NOT NULL
);

ALTER TABLE pracuje_w ADD CONSTRAINT pracuje_w_pk PRIMARY KEY ( id1,
id );

CREATE TABLE rejestracja (
    id                     INTEGER NOT NULL,
    start_date             DATE NOT NULL,
    end_date               DATE,
    numer_rejestarcji      INTEGER NOT NULL,
    "CZY_PRZYJETY(bool)"   INTEGER NOT NULL,
    id1                    INTEGER NOT NULL
);

ALTER TABLE rejestracja
    ADD CONSTRAINT rejestracja_pk PRIMARY KEY ( id1,
    id,
    numer_rejestarcji );

CREATE TABLE result_range (
    result_from   INTEGER NOT NULL,
    result_to     INTEGER NOT NULL,
    age           INTEGER,
    sex           INTEGER,
    id            INTEGER NOT NULL,
    id_0          INTEGER NOT NULL
);

ALTER TABLE result_range ADD CONSTRAINT result_range_pk PRIMARY KEY ( id,
id_0 );

CREATE TABLE sl_badania (
    id     INTEGER NOT NULL,
    name   VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE sl_badania ADD CONSTRAINT sl_badania_pk PRIMARY KEY ( id );

CREATE TABLE sl_testy (
    id      INTEGER NOT NULL,
    name    VARCHAR2(30 CHAR) NOT NULL,
    koszt   INTEGER NOT NULL
);

ALTER TABLE sl_testy ADD CONSTRAINT sl_testy_pk PRIMARY KEY ( id );

CREATE TABLE slownik_zlecenia (
    id     INTEGER NOT NULL,
    name   VARCHAR2(30 CHAR) NOT NULL
);

ALTER TABLE slownik_zlecenia ADD CONSTRAINT slownik_zlecenia_pk PRIMARY KEY ( id );

CREATE TABLE zlc_skl_z (
    id_b_z   INTEGER NOT NULL,
    id       INTEGER NOT NULL,
    id1      INTEGER NOT NULL
);

ALTER TABLE zlc_skl_z
    ADD CONSTRAINT zlc_skl_z_pk PRIMARY KEY ( id_b_z,
    id,
    id1 );

CREATE TABLE zlecenie (
    id              INTEGER NOT NULL,
    id1             INTEGER NOT NULL,
    "DATE"          DATE NOT NULL,
    comision_date   DATE NOT NULL,
    result_text     VARCHAR2(250 CHAR),
    result_image    BLOB,
    result_number   INTEGER,
    id2             INTEGER NOT NULL,
    id3             INTEGER NOT NULL
);

ALTER TABLE zlecenie
    ADD CONSTRAINT zlecenie_pk PRIMARY KEY ( id,
    id1,
    id2,
    id3 );

ALTER TABLE badanie_skl_z
    ADD CONSTRAINT badanie_skl_z_sl_badania_fk FOREIGN KEY ( id )
        REFERENCES sl_badania ( id );

ALTER TABLE badanie_skl_z
    ADD CONSTRAINT badanie_skl_z_sl_testy_fk FOREIGN KEY ( id1 )
        REFERENCES sl_testy ( id );

ALTER TABLE cennik
    ADD CONSTRAINT cennik_sl_testy_fk FOREIGN KEY ( id )
        REFERENCES sl_testy ( id );

ALTER TABLE konsultacja
    ADD CONSTRAINT konsultacja_lekarz_fk FOREIGN KEY ( id2 )
        REFERENCES lekarz ( id );

ALTER TABLE konsultacja
    ADD CONSTRAINT konsultacja_pacjent_fk FOREIGN KEY ( id1 )
        REFERENCES pacjent ( id );

ALTER TABLE lek_opiekuje_sie_pac
    ADD CONSTRAINT lek_opiekuje_pac_lekarz_fk FOREIGN KEY ( id2 )
        REFERENCES lekarz ( id );

ALTER TABLE lek_opiekuje_sie_pac
    ADD CONSTRAINT lek_opiekuje_pac_pacjent_fk FOREIGN KEY ( id1 )
        REFERENCES pacjent ( id );

ALTER TABLE lekarz
    ADD CONSTRAINT lekarz_pracownik_fk FOREIGN KEY ( id )
        REFERENCES pracownik ( id );

ALTER TABLE oddzial
    ADD CONSTRAINT oddzial_lekarz_fk FOREIGN KEY ( id1 )
        REFERENCES lekarz ( id );

ALTER TABLE pracownik_administracji
    ADD CONSTRAINT pa_pracownik_fk FOREIGN KEY ( id )
        REFERENCES pracownik ( id );

ALTER TABLE pielegniarz
    ADD CONSTRAINT pielegniarz_pracownik_fk FOREIGN KEY ( id )
        REFERENCES pracownik ( id );

ALTER TABLE pracownik
    ADD CONSTRAINT pracownik_pracownik_fk FOREIGN KEY ( id1 )
        REFERENCES pracownik ( id )
            ON DELETE SET NULL;

ALTER TABLE pracuje_w
    ADD CONSTRAINT pracuje_w_oddzial_fk FOREIGN KEY ( id )
        REFERENCES oddzial ( id );

ALTER TABLE pracuje_w
    ADD CONSTRAINT pracuje_w_pracownik_fk FOREIGN KEY ( id1 )
        REFERENCES pracownik ( id );

ALTER TABLE rejestracja
    ADD CONSTRAINT rejestracja_oddzial_fk FOREIGN KEY ( id )
        REFERENCES oddzial ( id );

ALTER TABLE rejestracja
    ADD CONSTRAINT rejestracja_pacjent_fk FOREIGN KEY ( id1 )
        REFERENCES pacjent ( id );

ALTER TABLE result_range
    ADD CONSTRAINT result_range_sl_testy_fk FOREIGN KEY ( id )
        REFERENCES sl_testy ( id );

ALTER TABLE zlc_skl_z
    ADD CONSTRAINT zlc_skl_z_sl_badania_fk FOREIGN KEY ( id )
        REFERENCES sl_badania ( id );

ALTER TABLE zlc_skl_z
    ADD CONSTRAINT zlc_skl_z_slownik_zlecenia_fk FOREIGN KEY ( id1 )
        REFERENCES slownik_zlecenia ( id );

ALTER TABLE zlecenie
    ADD CONSTRAINT zlecenie_lekarz_fk FOREIGN KEY ( id3 )
        REFERENCES lekarz ( id );

ALTER TABLE zlecenie
    ADD CONSTRAINT zlecenie_pacjent_fk FOREIGN KEY ( id2 )
        REFERENCES pacjent ( id );

ALTER TABLE zlecenie
    ADD CONSTRAINT zlecenie_slownik_zlecenia_fk FOREIGN KEY ( id1 )
        REFERENCES slownik_zlecenia ( id );

CREATE OR REPLACE VIEW LISTA_PACJENTOW  AS
SELECT
    pacjent.surname,
    pacjent.name
FROM
    pacjent
ORDER BY
    pacjent.surname 
;

CREATE OR REPLACE TRIGGER arc_fkarc_4_lekarz BEFORE
    INSERT OR UPDATE OF id ON lekarz
    FOR EACH ROW
DECLARE
    d   VARCHAR2(23);
BEGIN
    SELECT
        a.pracownik_type
    INTO
        d
    FROM
        pracownik a
    WHERE
        a.id =:new.id;

    IF
        ( d IS NULL OR d <> 'LEKARZ' )
    THEN
        raise_application_error(-20223,'FK LEKARZ_PRACOWNIK_FK in Table LEKARZ violates Arc constraint on Table PRACOWNIK - discriminator column PRACOWNIK_TYPE doesn''t have value ''LEKARZ'''
);
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fk_pracownik_administracji BEFORE
    INSERT OR UPDATE OF id ON pracownik_administracji
    FOR EACH ROW
DECLARE
    d   VARCHAR2(23);
BEGIN
    SELECT
        a.pracownik_type
    INTO
        d
    FROM
        pracownik a
    WHERE
        a.id =:new.id;

    IF
        ( d IS NULL OR d <> 'PRACOWNIK_ADMINISTRACJI' )
    THEN
        raise_application_error(-20223,'FK PA_PRACOWNIK_FK in Table PRACOWNIK_ADMINISTRACJI violates Arc constraint on Table PRACOWNIK - discriminator column PRACOWNIK_TYPE doesn''t have value ''PRACOWNIK_ADMINISTRACJI'''
);
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/

CREATE OR REPLACE TRIGGER arc_fkarc_4_pielegniarz BEFORE
    INSERT OR UPDATE OF id ON pielegniarz
    FOR EACH ROW
DECLARE
    d   VARCHAR2(23);
BEGIN
    SELECT
        a.pracownik_type
    INTO
        d
    FROM
        pracownik a
    WHERE
        a.id =:new.id;

    IF
        ( d IS NULL OR d <> 'PIELEGNIARZ' )
    THEN
        raise_application_error(-20223,'FK PIELEGNIARZ_PRACOWNIK_FK in Table PIELEGNIARZ violates Arc constraint on Table PRACOWNIK - discriminator column PRACOWNIK_TYPE doesn''t have value ''PIELEGNIARZ'''
);
    END IF;

EXCEPTION
    WHEN no_data_found THEN
        NULL;
    WHEN OTHERS THEN
        RAISE;
END;
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            18
-- CREATE INDEX                             1
-- ALTER TABLE                             41
-- CREATE VIEW                              1
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           3
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
